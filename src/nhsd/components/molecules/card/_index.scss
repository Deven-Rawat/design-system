// Settings
@use "scss-core/settings/vars";
@use "scss-core/settings/media-queries" as *;

// Tokens
@use "scss-core/tokens/colours" as nhsd-colours;
@use "scss-core/tokens/spacing" as nhsd-spacing;
@use "scss-core/tokens/transition" as nhsd-transition;

// Component imports
@use "../../atoms/button";
@use "../../atoms/box";

// Private members
$-root: ".nhsd-m-card";
$-icon-size: 2.1rem;

// Public members
$box-padding: 1.111rem;

#{$-root} {
  display: block;
  position: relative;
  min-height: 11.111rem;

  @include mq($until: s) {
    min-height: 8.333rem;
  }

  &__link {
    display: inline-block;
    width: 100%;
    overflow: hidden;
    border-radius: vars.$border-radius;
    color: inherit;
    box-shadow: 0 0 0 .167rem transparent;
    transition-property: box-shadow;
    transition-duration: nhsd-transition.$transition-duration;
    text-decoration: none;

    &:focus,
    &:hover {
      box-shadow: 0 0 0 .167rem nhsd-colours.get("yellow");

      .nhsd-a-button {
        box-shadow: 0 0 0 .167rem nhsd-colours.get("yellow");
      }

      #{$-root}__arrow {
        transform: translateX(.556rem);
        background: nhsd-colours.get("yellow");

        & > svg {
          fill: #000000;
        }
      }

      .nhsd-a-box {
        box-shadow: inset 0 0 0 box.$border-width transparent;
      }
    }
  }

  &__content-box {
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    padding: $box-padding $box-padding 0;
  }

  &__arrow,
  .nhsd-a-button {
    align-self: baseline;
    margin: nhsd-spacing.get(4) $box-padding $box-padding;
  }

  &__date {
    display: block;
    margin: -.175rem 0 .2rem;
    color: nhsd-colours.get("dark-grey");
    font-size: .778rem;
    font-weight: bold;
    letter-spacing: -.0167rem;
    line-height: 1rem;
  }

  &__icon {
    display: block;
    position: absolute;
    top: $box-padding;
    right: $box-padding;
    width: $-icon-size;
    height: $-icon-size;
  }

  .nhsd-t-body {
    margin: 0 0 .8rem;

    &:last-of-type {
      margin-bottom: 0;
    }
  }

  &__arrow {
    @include nhsd-transition.trans-easing(nhsd-transition.$ease-out-expo);

    transition-property: transform;
    transition-duration: nhsd-transition.$transition-duration;
  }

  .nhsd-a-box {
    display: flex;
    flex-direction: column;
    flex: 1;
    padding: 0;

    &--bg-dark-grey,
    &--bg-blue {
      &,
      #{$-root}__date,
      [class^="nhsd-t-heading-"],
      .nhsd-t-body {
        color: nhsd-colours.get("white");
      }
    }

    &--bg-yellow {
      &,
      #{$-root}__date,
      [class^="nhsd-t-heading-"],
      .nhsd-t-body {
        color: nhsd-colours.get("black");
      }
    }
  }

  .nhsd-a-tag {
    position: absolute;
    top: 0;

    & + *:nth-of-type(1) {
      margin-top: .75rem;
    }
  }

  .nhsd-a-picture {
    & + #{$-root}__content-box {
      padding-top: $box-padding * .4;

      & > *:nth-child(1) {
        margin-top: .278rem;
      }
    }
  }

  .nhsd-a-button {
    pointer-events: none;
  }

  &:active {
    .nhsd-a-button {
      transform: translateY(button.$active-state-push-down);
    }
  }

  &--focus-orange {
    #{$-root}__link {
      &:focus,
      &:hover {
        box-shadow: 0 0 0 .167rem nhsd-colours.get("orange");

        #{$-root}__arrow {
          background: nhsd-colours.get("orange");
        }

        .nhsd-a-button {
          box-shadow: 0 0 0 .167rem nhsd-colours.get("orange");
        }
      }
    }
  }

  &--with-icon {
    [class^="nhsd-t-heading-"] {
      margin-bottom: 1rem;
      padding-right: $-icon-size * 1.5;
    }

    .nhsd-t-body {
      padding-right: $-icon-size;
    }
  }
}
